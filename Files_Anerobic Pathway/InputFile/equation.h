void formula(complex<double> *x, complex<double> *fx, complex<double> **v, complex<double> *sv, int nd1, int ni, int cv, complex<double> **stoin, double t)
{
	int i, j;

	//*****************************************************************************
	complex<double> s0;
	complex<double> s1;
	//****************************************************************   
	int cv1;
	cv1 = cv + 1;
	//****************************************************************

	sv[1] = 0.8122 * pow(x[2], -0.2344) * x[6];
	sv[2] = 2.8632 * pow(x[1], 0.7464) * pow(x[5], 0.0243) * x[7];
	sv[3] = 0.5232 * pow(x[2], 0.7318) * pow(x[5], -0.3941) * x[8];
	sv[4] = 0.0009 * pow(x[2], 8.6107) * x[11];
	sv[5] = 0.011 * pow(x[3], 0.6159) * pow(x[5], 0.1308) * x[9] * pow(x[14], -0.6088);
	sv[6] = 0.04725 * pow(x[3], 0.05) * pow(x[4], 0.533) * pow(x[5], -0.0822) * x[12];
	sv[7] = 0.0945 * pow(x[3], 0.05) * pow(x[4], 0.533) * pow(x[5], -0.0822) * x[10];
	sv[8] = x[5] * x[13];
	
	//****************************************************************

	for (i = 1; i < nd1; i++) {
		s0 = 0.0;
		s1 = 0.0;
		for (j = 1; j < cv1; j++) {

			if (real(stoin[i][j]) > 0.0) s0 = s0 + stoin[i][j] * sv[j];
			if (real(stoin[i][j]) < 0.0) s1 = s1 + stoin[i][j] * sv[j];
		}

		v[i][0] = s0;
		v[i][1] = -s1;
		fx[i] = s0 + s1;
	}
}